I had to evaliate someone on push swap two days ago and since it's been
over an year now, I decided i know now more than what i used to back then
when i was only staring my career and was doing push swap myself. So here 
is a simple(hopefully) version of visualizer for the push swap project 
created by using C++ knowleage.

But first things first. Push Swap is a project about sorting a stack
of numbers by using only one two stacks and while having a limits on
how the numbers can be moved from stack tostack. 
Also the idea is to move numbers with less moves possible.
So now that we have all this set on the table, lets talk about the 
visualizer.It must generate numbers as many as the user required to check
the push swap program. The numbers must be generated randomly, 
also important the user must be able to set frames on the numbers. 
Meaning, for example range of -100 up to 100. 

As mantioned already, I am going to use C++ to create it. 
And also I would be creating a Console-Based Visualizer(meaning Text-Based). 
Pluses on that choice are faster execution (C++ in particular), also it will
integrate well with the existing C program. 
Step one - creating a Randow Number Generator. -> RandNumbGen.cpp
1. User inputs how many numbers to generate
2. User specifies the range(min & max values)
3. Generate random numbers and display them

Once this is complete i am moving on to passing the values to my own
C program.

Passing the value is completed. Now i need to make sure to get back and check
if any number is dublicated push_swap will trow an error so i have to make sure that
there will be no dublicate numbers. Step two, to make sure that i check as many times
as needed if my input is correct.(currently is only checking twice).

Okay, so far the program is working well, in a sense that it is displaying the numbers,
but my next step i want to try it to display the numbers with colours, like boxes maybe
and the idea is to use the blocks in colours of rainbow. And each side of the rainbox will
represent the positive and the negative spector. On to this challenge.
Representing the sorting process visually using colored bars in the terminal,
wih a gradient-like effect for negative and positive numbers.

Plan:
1. Use ASCII blocks to represent numbers as bars.
2.Use ANSI color codes to color them:
-Negative numbers -> Blue/Purple shades
-Positive numbers -> Red/Yellow shades
-Zero -> White or neutral
3. Display two stacks (A & B) side by sade, (as before).
4. Update visualization on each operation(e.g, sa, pb, ra and so on).

Note: So here i want to add a problem that i am facing currently and that is
the fact that my push swap is working faster than the displaying function, so i now
plan to try and save all operations in a global list and later use the operations
to visualize them with the displaying function. When i try to run both at the same
time it seeems to work well, though it can't finish the process, as the visualizer
relays strongly on waiting a few second to be able to display each bar uptading.
Lets see if i can fix this somehow.

Current State of the program, after 5 days of work on it.
All blocks are visualized, i need to align them. Second I need to print
the numbers on screen before so i need what i'm sorting. Lastly i need to
print all moves to see if the calculating algorithm is good enough.